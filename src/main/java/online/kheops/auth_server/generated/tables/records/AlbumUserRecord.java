/*
 * This file is generated by jOOQ.
 */
package online.kheops.auth_server.generated.tables.records;


import javax.annotation.Generated;

import online.kheops.auth_server.generated.tables.AlbumUser;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumUserRecord extends UpdatableRecordImpl<AlbumUserRecord> implements Record7<Long, Long, Long, Byte, Byte, Byte, Byte> {

    private static final long serialVersionUID = 1313425916;

    /**
     * Setter for <code>kheops.album_user.pk</code>.
     */
    public void setPk(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>kheops.album_user.pk</code>.
     */
    public Long getPk() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>kheops.album_user.album_fk</code>.
     */
    public void setAlbumFk(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>kheops.album_user.album_fk</code>.
     */
    public Long getAlbumFk() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>kheops.album_user.user_fk</code>.
     */
    public void setUserFk(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>kheops.album_user.user_fk</code>.
     */
    public Long getUserFk() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>kheops.album_user.admin</code>.
     */
    public void setAdmin(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>kheops.album_user.admin</code>.
     */
    public Byte getAdmin() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>kheops.album_user.new_series_notifications</code>.
     */
    public void setNewSeriesNotifications(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>kheops.album_user.new_series_notifications</code>.
     */
    public Byte getNewSeriesNotifications() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>kheops.album_user.new_comment_notifications</code>.
     */
    public void setNewCommentNotifications(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>kheops.album_user.new_comment_notifications</code>.
     */
    public Byte getNewCommentNotifications() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>kheops.album_user.favorite</code>.
     */
    public void setFavorite(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>kheops.album_user.favorite</code>.
     */
    public Byte getFavorite() {
        return (Byte) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Long, Long, Byte, Byte, Byte, Byte> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Long, Long, Byte, Byte, Byte, Byte> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return AlbumUser.ALBUM_USER.PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return AlbumUser.ALBUM_USER.ALBUM_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return AlbumUser.ALBUM_USER.USER_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return AlbumUser.ALBUM_USER.ADMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return AlbumUser.ALBUM_USER.NEW_SERIES_NOTIFICATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return AlbumUser.ALBUM_USER.NEW_COMMENT_NOTIFICATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return AlbumUser.ALBUM_USER.FAVORITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getAlbumFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getUserFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getAdmin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getNewSeriesNotifications();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component6() {
        return getNewCommentNotifications();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component7() {
        return getFavorite();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getAlbumFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getUserFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getAdmin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getNewSeriesNotifications();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getNewCommentNotifications();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getFavorite();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumUserRecord value1(Long value) {
        setPk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumUserRecord value2(Long value) {
        setAlbumFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumUserRecord value3(Long value) {
        setUserFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumUserRecord value4(Byte value) {
        setAdmin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumUserRecord value5(Byte value) {
        setNewSeriesNotifications(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumUserRecord value6(Byte value) {
        setNewCommentNotifications(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumUserRecord value7(Byte value) {
        setFavorite(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumUserRecord values(Long value1, Long value2, Long value3, Byte value4, Byte value5, Byte value6, Byte value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlbumUserRecord
     */
    public AlbumUserRecord() {
        super(AlbumUser.ALBUM_USER);
    }

    /**
     * Create a detached, initialised AlbumUserRecord
     */
    public AlbumUserRecord(Long pk, Long albumFk, Long userFk, Byte admin, Byte newSeriesNotifications, Byte newCommentNotifications, Byte favorite) {
        super(AlbumUser.ALBUM_USER);

        set(0, pk);
        set(1, albumFk);
        set(2, userFk);
        set(3, admin);
        set(4, newSeriesNotifications);
        set(5, newCommentNotifications);
        set(6, favorite);
    }
}

/*
 * This file is generated by jOOQ.
 */
package online.kheops.auth_server.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import online.kheops.auth_server.generated.Indexes;
import online.kheops.auth_server.generated.Keys;
import online.kheops.auth_server.generated.Public;
import online.kheops.auth_server.generated.tables.records.WebhookTriggersRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WebhookTriggers extends TableImpl<WebhookTriggersRecord> {

    private static final long serialVersionUID = -1817486332;

    /**
     * The reference instance of <code>public.webhook_triggers</code>
     */
    public static final WebhookTriggers WEBHOOK_TRIGGERS = new WebhookTriggers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WebhookTriggersRecord> getRecordType() {
        return WebhookTriggersRecord.class;
    }

    /**
     * The column <code>public.webhook_triggers.pk</code>.
     */
    public final TableField<WebhookTriggersRecord, Long> PK = createField("pk", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.webhook_triggers.id</code>.
     */
    public final TableField<WebhookTriggersRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>public.webhook_triggers.webhook_fk</code>.
     */
    public final TableField<WebhookTriggersRecord, Long> WEBHOOK_FK = createField("webhook_fk", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.webhook_triggers.is_manual_trigger</code>.
     */
    public final TableField<WebhookTriggersRecord, Boolean> IS_MANUAL_TRIGGER = createField("is_manual_trigger", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.webhook_triggers.new_series</code>.
     */
    public final TableField<WebhookTriggersRecord, Boolean> NEW_SERIES = createField("new_series", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.webhook_triggers.new_user</code>.
     */
    public final TableField<WebhookTriggersRecord, Boolean> NEW_USER = createField("new_user", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.webhook_triggers.user_fk</code>.
     */
    public final TableField<WebhookTriggersRecord, Long> USER_FK = createField("user_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.webhook_triggers</code> table reference
     */
    public WebhookTriggers() {
        this(DSL.name("webhook_triggers"), null);
    }

    /**
     * Create an aliased <code>public.webhook_triggers</code> table reference
     */
    public WebhookTriggers(String alias) {
        this(DSL.name(alias), WEBHOOK_TRIGGERS);
    }

    /**
     * Create an aliased <code>public.webhook_triggers</code> table reference
     */
    public WebhookTriggers(Name alias) {
        this(alias, WEBHOOK_TRIGGERS);
    }

    private WebhookTriggers(Name alias, Table<WebhookTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private WebhookTriggers(Name alias, Table<WebhookTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WebhookTriggers(Table<O> child, ForeignKey<O, WebhookTriggersRecord> key) {
        super(child, key, WEBHOOK_TRIGGERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WEBHOOK_TRIGGERS_ID_UNIQUE, Indexes.WEBHOOK_TRIGGERS_PK, Indexes.WEBHOOK_TRIGGERS_WEBHOOK_FK_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WebhookTriggersRecord> getPrimaryKey() {
        return Keys.WEBHOOK_TRIGGERS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WebhookTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<WebhookTriggersRecord>>asList(Keys.WEBHOOK_TRIGGERS_PK, Keys.WEBHOOK_TRIGGERS_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WebhookTriggersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WebhookTriggersRecord, ?>>asList(Keys.WEBHOOK_TRIGGERS__WEBHOOK_TRIGGERS_WEBHOOK_FK_FKEY, Keys.WEBHOOK_TRIGGERS__WEBHOOK_TRIGGERS_USER_FK_FKEY);
    }

    public Webhooks webhooks() {
        return new Webhooks(this, Keys.WEBHOOK_TRIGGERS__WEBHOOK_TRIGGERS_WEBHOOK_FK_FKEY);
    }

    public Users users() {
        return new Users(this, Keys.WEBHOOK_TRIGGERS__WEBHOOK_TRIGGERS_USER_FK_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WebhookTriggers as(String alias) {
        return new WebhookTriggers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WebhookTriggers as(Name alias) {
        return new WebhookTriggers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WebhookTriggers rename(String name) {
        return new WebhookTriggers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WebhookTriggers rename(Name name) {
        return new WebhookTriggers(name, null);
    }
}

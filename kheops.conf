#server {
#    listen 80 default_server;
#    server_name _;
#    return 301 https://$host$request_uri;
#}


upstream dicomweb_proxy {
  # The keepalive parameter sets the maximum number of idle keepalive connections
  # to upstream servers that are preserved in the cache of each worker process. When
  # this number is exceeded, the least recently used connections are closed.
  keepalive 128;

  server kheopsdicomwebproxy:8080;
}

limit_conn_zone $server_name zone=servers:10m;

server {

    listen 443 ssl;
    server_name ${ohif_server_name};

    limit_conn servers 1000;

    ssl_certificate           /run/secrets/fullchain2.pem;
    ssl_certificate_key       /run/secrets/privkey2.pem;

    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    access_log            /var/log/nginx/access.log main;
    error_log             /var/log/nginx/error.log warn;

    client_max_body_size    20000M;
    proxy_send_timeout      120;
    proxy_read_timeout      120;
    proxy_request_buffering off;
    proxy_buffering         off;

    location / {
      return 301 https://www.google.ch;
    }
}

server {

listen 443 ssl;
    server_name ${server_name};

    limit_conn servers 1000;

    ssl_certificate           /run/secrets/fullchain1.pem;
    ssl_certificate_key       /run/secrets/privkey1.pem;

    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    access_log            /var/log/nginx/access.log main;
    error_log             /var/log/nginx/error.log warn;

    client_max_body_size    20000M;
    proxy_send_timeout      120;
    proxy_read_timeout      120;
    proxy_request_buffering off;
    proxy_buffering         off;

    location / {
      return 301 https://www.youtube.com;
    }
}

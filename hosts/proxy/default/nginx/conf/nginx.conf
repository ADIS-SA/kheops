env JWT_SECRET;

worker_processes 1;

events { worker_connections 1024; }

http {
    #sendfile on;
    lua_package_path '/opt/openresty/nginx/lua/?.lua;;';

    server {
        listen 80;
        client_max_body_size 2000000M;
	proxy_send_timeout      120;
        proxy_read_timeout      120;
        proxy_request_buffering off;
        proxy_buffering         off;
        




        location ~ ^/studies/([0-9.]+)/series/([0-9.]+)(\/instances\/[0-9.]+(\/frames\/[1-9,]+|\/bulkdata\/.*|\/metadata)?|\/metadata)?$ {
#            access_by_lua '
#                if ngx.var.request_method == "GET" then
#                    local jwt = require("nginx-jwt")
#                    jwt.auth({ 
#		        study_uid="^"..ngx.var[1].."$",
#		        series_uid="^"..ngx.var[2].."$"
#                    })
#                else
#                    ngx.header["Allow"] = "GET"
#                    ngx.exit(ngx.HTTP_NOT_ALLOWED)
#                end
#            ';

            proxy_pass ${pacs_wado_rs}/studies/$1/series/$2$3;
        }

        location ~ ^/studies/([0-9.]+)(\/metadata)?$ {
#            access_by_lua '
#		if ngx.var.request_method == "POST" then
#                    local jwt = require("nginx-jwt")
#                    jwt.auth({
#                        study_uid="^"..ngx.var[1].."$"
#                    })
#                elseif ngx.var.request_method == "GET" then
#                    local jwt = require("nginx-jwt")
#                    jwt.auth({ 
#		        study_uid="^"..ngx.var[1].."$",
#		        series_uid="^all_access$"
#                    })
#                else
#                    ngx.header["Allow"] = "GET, POST"
#                    ngx.exit(ngx.HTTP_NOT_ALLOWED)
#                end
#            ';

            proxy_pass ${pacs_wado_rs}/studies/$1$2;
        }


        location = /wado {
#            access_by_lua '
#                if ngx.var.request_method == "GET" then
#                    local jwt = require("nginx-jwt")
#                    jwt.auth({})
#                else
#                    ngx.header["Allow"] = "GET"
#                    ngx.exit(ngx.HTTP_NOT_ALLOWED)
#                end
#            ';

            proxy_pass ${pacs_wado_uri};
        }

        location = /studies {
#            access_by_lua '
#		if ngx.var.request_method == "POST" then
#                    local jwt = require("nginx-jwt")
#                    jwt.auth({})
#                elseif ngx.var.request_method == "GET" then
#                    local jwt = require("nginx-jwt")
#                    jwt.auth({
#                        study_uid="^"..ngx.var.arg_StudyInstanceUID.."$",
#                        series_uid="^all_access$"
#                    })

#                else
#                    ngx.header["Allow"] = "GET, POST"
#                    ngx.exit(ngx.HTTP_NOT_ALLOWED)
#                end
#                            
#            ';

            proxy_pass ${pacs_wado_rs}/studies$is_args$args;
        }

        location ~ ^/studies/([0-9.]+)/series$ {
#            access_by_lua '
#		if ngx.var.request_method == "GET" then
#                    local jwt = require("nginx-jwt")
#                    jwt.auth({
#                        study_uid="^"..ngx.var[1].."$",
#                        series_uid="^"..ngx.var.arg_SeriesInstanceUID.."$"
#                    })

#                else
#                    ngx.header["Allow"] = "GET"
#                    ngx.exit(ngx.HTTP_NOT_ALLOWED)
#                end
                            
#            ';

            proxy_pass ${pacs_wado_rs}/studies/$1/series$is_args$args;
        }
    }
}
